<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=0;
    ///scanlines init
starty=0;
tot=256;
inc= room_height/tot;


effectStep = 0.1;
effectTime = 0;

instance_create(x,y,rippleEffect);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
//draw scanline
//shders init
//performance bottleneck

col = make_color_rgb( 0,0,0);
draw_set_color( col );
draw_set_alpha( 0.1 );//random_range(1,3) / 63.5 );
for(i=0;i&lt;tot ;i++)
{
 draw_line_width(0, starty + ( i*inc ), room_width, starty + (i*inc) , irandom(40)/20);
}
starty=starty+0.1;
if(starty&gt;inc)
 starty=0;
 exit
 
 
 //video worn out tape effect
 mx = view_xview[0] + view_wview[0];
 my = view_yview[0] + view_hview[0];
 
 
 draw_set_alpha( 1);
 draw_set_colour(c_white);
stepf=2;
 for( j = view_yview[0]; j&lt; my;j+=stepf){
    stepf = irandom(6)+1;
    for( i = view_xview[0]; i &lt; mx;i+=stepf){
         draw_set_colour(c_white);
          draw_set_alpha(irandom(effectTime)/120);
         if( irandom(10)==10 ){
             draw_set_colour(c_black);
              //draw_set_alpha(1);
         }
        //col = draw_getpixel(i,j)
        //col[0]=0;
        //col = make_color_rgb( 255,0,0);
        //draw_set_colour(col);
       
        
        draw_point( i,j);
    }
 }
 
 effectTime+=effectStep;
 if( effectTime &gt; 30 ){
    effectStep=-0.1;
 }
 
 if( effectTime &lt; 0 ){
    effectStep= 0.1;
 }

 //tape worn out glitch 

if( effectStep &gt; 0 &amp;&amp; effectTime &lt; 4 ){
    
    shader_set(shd_ripple);
}else{
    shader_reset();
}


if( effectStep &gt; 0 || bulletTime==1 ){
    
              
     glitchSize= 4;//irandom(32);
     sec = effectTime;
     sp = (view_yview[0] + view_hview[0])/30;
     
     draw_set_blend_mode_ext(bm_inv_dest_colour, bm_inv_src_alpha);
     draw_set_alpha(1);
      //draw_set_alpha( irandom(10)/10);
    if( sec &lt; 32 || bulletTime==1 ){
        for( i =1; i&lt;irandom(6); i++){
           pos = sec*sp + i*10;
           if( pos &lt; (view_xview[0]+120) ){ 
             draw_rectangle_color(view_xview[0], sec*sp + i*10, view_xview[0] + view_wview[0],
              (sec*sp )+ glitchSize/i, 
              c_white, c_white, c_white, c_white, false);
           }
        }
    }
    draw_set_blend_mode(bm_normal);
}
  draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
