<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=5;
lastx=x;
lasty=y;

texts[0]="What do you want? 
";
texts[1]="fresh meat
";
texts[2]="welkomen 
";
 texts[3]="MOVE IT!
 ";
 texts[4]="GET OUTTA MY FACE!
 ";
 texts[5]="I'm going to kill you
 "
diag = instance_create( x, y, dialog);
diag.text="";
 
 last_image_index=image_index
 
 state="standing";
 
 mask_index=guywalk
 //solid=1;
 light =0;
 findpath=0;
 
 step=0;
 
 snd = audio_play_sound(whisper, 1, true);
dist_to_player = distance_to_object(mainObject3)

 
 if( dist_to_player != 0){
    audio_sound_gain( snd, 0.4*1/dist_to_player,0 )
 }else{
    audio_sound_gain( snd, 0.4, 0 );
  }
  
  
  path=-1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>119</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_path</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>8</kind>
            <path>-1</path>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path_end()

if(path)
path_delete(path)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dist_to_player = distance_to_object(mainObject3)

//show_debug_message(dist_to_player);
if( dist_to_player != 0 || dist_to_player &gt; 68 ){
    audio_sound_gain( snd, 68/dist_to_player,0 )
 }else{
    audio_sound_gain( snd, 0.4, 0 );
  }

if( state == "dead" ){
    exit;
}
if( state == "find"){
    step++;
    if( step &gt; 20 ){
        if( instance_exists(mainObject3) )
       {
            
           path = path_add();
            //mp_potential_path(path, mainObject3.x, mainObject3.y, 1, 3, true);
            var succ = mp_potential_path_object(path, mainObject3.x, mainObject3.y, 1, 3, collidable);
           
            path_start(path, 2, 0, 0);
            if( findpath!=0 ){
                path_delete(findpath);
            }
            findpath = path;
            //show_debug_message("path number:");
            //show_debug_message(path);
            show_debug_message(succ);
       }
       step=0;
    }
}
//if(path_speed &gt; 0){
    //state="walking";
//}else{
 
//}


if( light!=0){
light.x = x;
light.y = y;
}   

//inflict damage

 
 //kill soldier if clicked
 if mouse_check_button_pressed(mb_left){
 
 
     if( (mainObject3.state!="walking" || state=="find") &amp;&amp; abs( mainObject3.x - x ) &lt; 20 &amp;&amp; abs( mainObject3.y- y ) &lt; 20){
            //takeDamage(mainObject3.x, mainObject3.y);
            //show_debug_message("soldier kill");
            var bl = instance_create( mainObject3.x, mainObject3.y, blood);
            bl.size = 1 + irandom(100)/100;
            
            //var pd = point_direction(x,y, mainObject3.x,mainObject3.y);
            
            bl.pdx = lastx-x;
            bl.pdy = lasty-y;
            state = "dead";  
            if(irandom(10)&lt;10){
                s = audio_play_sound(dead,0.01,false);
               audio_sound_gain( s, 0.2, 0);

            }else{   
               s=  audio_play_sound(taunt,0.01,false); 
                                audio_sound_gain( s, 0.2, 0);
  
            }
     }
 }
 
 if( state != "dead" &amp;&amp; diag.answerClicked=="ok" ){
        audio_sound_gain( snd, 0, 3000 );
 
        instance_destroy();
        state="find";
        //make hitbox  smaller to move around easier
        mask_index=colSpriteSmall
        if( light == 0 ){
            light=instance_create(x,y,lightmap);
            light.color = c_red;
        }
 } 
 
 
if mouse_check_button_pressed(mb_left)
{
   if(  mainObject3.state=="walking" &amp;&amp; focusedOnObject==0 &amp;&amp; state!="dead" &amp;&amp; state!="find" &amp;&amp; abs( mouse_x - x ) &lt; 20 &amp;&amp; abs( mouse_y - y ) &lt; 20 ){
    diag.showText = 1;   
    diag.text = texts[0]
    diag.textIndex = 0;
     state="standing";
     focusedOnObject=1;
     s = audio_play_sound(sigh,1,false);
     audio_sound_gain( s, 0.2, 0);
     /*
     if( irandom(10) == 10 ){
        diag.text="The hangman is not going to kill you
        , I AM !,
         come here scumbag! ";
        state="find";
        //make hitbox  smaller to move around easier
        mask_index=colSpriteSmall
        if( light == 0 ){
            light=instance_create(x,y,lightmap);
            light.color = c_red;
        }
     }
     */
    
   }
  
}

if mouse_check_button_pressed(mb_right)
{
 
   //state="find";
   //mask_index=colSpriteSmall
}



image_angle = point_direction(lastx, lasty, x ,y);
if( x!=lastx ){
    lastx=x;
}
if(y!=lasty){
    lasty=y;
}



diag.x = x;
diag.y = y;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(state!="dead"){
 show_debug_message("hit");
   var bl = instance_create( x, y, blood);
            bl.size = 1 + irandom(100)/100;
            
            //var pd = point_direction(x,y, mainObject3.x,mainObject3.y);
            
            bl.pdx = 0;
            bl.pdy = 0;
            state = "dead";  
             if(irandom(10)&lt;10){
                s = audio_play_sound(dead,0.01,false);
               audio_sound_gain( s, 0.2, 0);

            }else{   
               s=  audio_play_sound(taunt,0.01,false); 
                                audio_sound_gain( s, 0.2, 0);
  
            }
            
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw shadow first

//draw_sprite_ext(guywalk, image_index,x+1, y+1, 1, 1, image_angle, c_black, 0.7);
//draw_sprite_ext(guywalk, image_index,x, y, 1, 1, image_angle, c_white, 1);
//image_speed = 0.01;
//draw legs first
if( state!="standing" &amp;&amp; state!="dead" ){
    draw_sprite_ext(legsSprite, image_index,x+1, y+1, 0.7, 0.7, image_angle, c_black, 0.7);
        draw_sprite_ext(legsSprite, image_index,x, y, 0.6, 0.6, image_angle, c_white, 0.1);
}else{
     
}

if(state=="walking" || state=="find"){
draw_sprite_ext(guywalk, image_index,x+1, y+1, 1, 1, image_angle, c_black, 0.7);
  draw_sprite_ext(guywalk, image_index,x, y, 1, 1, image_angle, c_white, 0.1);
  image_speed = 0.2;
}else if( state == "dead"){
depth=7;
draw_sprite_ext(deadSprite, 0,x+1, y+1, 1, 1, image_angle, c_black, 0.7);
  draw_sprite_ext(deadSprite, 0,x, y, 1, 1, image_angle, c_white, 0.1);

}else{
draw_sprite_ext(guywalk, image_index,x+1, y+1, 1, 1, image_angle, c_black, 0.7);
  draw_sprite_ext(guywalk, image_index,x, y, 1, 1, image_angle, c_white, 0.1);
  image_speed = 0.02;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
